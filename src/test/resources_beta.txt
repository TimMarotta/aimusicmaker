Things to consider for a resources class:
- Array containing chromatic order of notes starting with C
    [C, C#, D, D#, E, F, F#, G, G#, A, A#, B]
- Data structure containing notes in major triads in root position (might be best to hard code these, but could also be
indexes of helper array)
    C:  [C, E, G]
    C#: [C#, F, G#]
    D:  [D, F#, A]
    D#: [D#, G, A#]
    E:  [E, G#, B]
    F:  [F, A, C]
    F#: [F#, A#, C#]
    G:  [G, B, D]
    G#: [G#, C, D#]
    A:  [A, C#, E]
    A#: [A#, D, F]
    B:  [B, D#, F#]
    NOTE: Triad chords have inversions of their root chords which dictates note order. Choosing which inversion will be
    determined by a helper function also contained in the resources class
        Root: C E G
        1st: E G C
        2nd: G C E
- Helper function to determine placement of chord on instrument range (UNTESTED IDEA BUT I THINK IT WORKS)
    Given a chord name, root octave number (2-7), and an inversion number (0 for root, 1 for 1st, and 2 for second):
    1. the root note will be the same as the octave number
    2. Root Position:
        first item in list gets octave number unchanged
        if position of note 2 is greater than position of note 1 in list, note 2 is octave number; else octave number +1
        if position of note 3 is greater than position of note 2 in list, note 3 is octave number, else octave number +1
    3. 1st Position:
        second item in list gets octave number unchanged
        if position of note 1 is greater than position of note 2 in list, note 1 is octave number; else octave number +1
        if position of note 3 is greater than position of note 1 in list, note 3 is octave number, else octave number +1
    4. 2nd Position:
        third item in list gets octave number unchanged
        if position of note 1 is greater than position of note 3 in list, note 1 is octave number; else octave number +1
        if position of note 2 is greater than position of note 1 in list, note 2 is octave number, else octave number +1
- Helper function to make minor chords
    Should just be subtracting one from the position of the current middle note of the triad. This approach most cleanly
    works on root position triads, so this function may be best called when determining the position of the chords.